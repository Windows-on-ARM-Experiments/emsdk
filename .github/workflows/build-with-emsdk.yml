name: Build emscripten tools using emsdk

on:
  workflow_dispatch:
    inputs:
      llvm_build:
        description: 'LLVM Arm64 build'
        required: false
        default: false
        type: boolean
      python_build:
        description: 'Python Arm64 build'
        required: false
        default: false
        type: boolean
      node_build:
        description: 'Node Arm64 build'
        required: false
        default: false
        type: boolean
      binaryen_build:
        description: 'Binaryen Arm64 build'
        required: false
        default: false
        type: boolean
      emscripten_build:
        description: 'Emscripten Arm64 build'
        required: false
        default: false
        type: boolean

jobs:
  install_msbuild:
    runs-on: [self-hosted, Windows, ARM64, WASM]
    timeout-minutes: 60

    steps:
      - name: Install Visual Studio Build Tools
        run: |
          Invoke-WebRequest -OutFile vs_buildtools.exe -Uri https://aka.ms/vs/17/release/vs_buildtools.exe
          Start-Process .\vs_buildtools.exe -ArgumentList "--quiet --wait --norestart --nocache --add Microsoft.Component.MSBuild --add Microsoft.VisualStudio.Component.VC.Tools.ARM64" -NoNewWindow -PassThru -Wait

  bootstrap_emsdk:
    needs: install_msbuild

    runs-on: [self-hosted, Windows, ARM64, WASM]
    timeout-minutes: 60

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Bootstrap emsdk
        run: |
          .\emsdk.bat list
          .\emsdk.bat install latest
          .\emsdk.bat activate latest
          .\emsdk.bat list

  build_llvm:
    needs: bootstrap_emsdk

    if: ${{ inputs.llvm_build }}
    
    runs-on: [self-hosted, Windows, ARM64, WASM]
    timeout-minutes: 60

    steps:
      - name: Build LLVM wth emsdk
        run: |
          echo "Build LLVM with emsdk"

  build_python:
    needs: bootstrap_emsdk

    if: ${{ inputs.python_build }}
    
    runs-on: [self-hosted, Windows, ARM64, WASM]
    timeout-minutes: 60

    steps:
      - name: Build Python with emsdk
        run: |
          echo "Build Python with emsdk"

  build_node:
    needs: bootstrap_emsdk

    if: ${{ inputs.node_build }}
    
    runs-on: [self-hosted, Windows, ARM64, WASM]
    timeout-minutes: 60

    steps:
      - name: Build Node with emsdk
        run: |
          echo "Build Node with emsdk" 

  build_binaryen:
    needs: bootstrap_emsdk

    if: ${{ inputs.binaryen_build }}
    
    runs-on: [self-hosted, Windows, ARM64, WASM]
    timeout-minutes: 60

    steps:
      - name: Build Binaryen with emsdk
        run: |
          echo "Build Binaryen with emsdk" 


  build_emscripten:
    needs: bootstrap_emsdk

    if: ${{ inputs.emscripten_build }}
    
    runs-on: [self-hosted, Windows, ARM64, WASM]
    timeout-minutes: 60

    steps:
      - name: Build Emscripten with emsdk
        run: |
          echo "Build Emscripten with emsdk"
